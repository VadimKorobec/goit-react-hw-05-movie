{"version":3,"file":"static/js/186.61bff44e.chunk.js","mappings":"6LAkCA,UA9BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAAUI,KAAKP,GAC5BD,EAAQS,OAAS,GACnBN,GAAoB,EAEvB,GAAE,CAACC,EAAUJ,KAGZ,0BACE,wBACGE,EACCF,EAAQU,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,KAOlB,uEAKT,C,8LC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,gCAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAgB,mCAAG,WAAMZ,GAAN,uFACXC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,qBAA0C,CAC3DI,OAAQ,CACNC,QAASH,KAHiB,cACxBK,EADwB,yBAMvBA,EAAKC,MANkB,2CAAH,sDAShBK,EAAa,mCAAG,WAAMb,GAAN,uFACRC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,4BAAiD,CAClEI,OAAQ,CACNC,QAASH,KAHc,cACrBK,EADqB,yBAMpBA,EAAKC,KAAKM,MANU,2CAAH,sDASbrB,EAAgB,mCAAG,WAAMO,GAAN,uFACXC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,6BAAkD,CACnEI,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJoB,cACxBC,EADwB,yBAOvBA,EAAKC,KAAKC,SAPa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiService.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'services/apiService';\n\nconst Reviews = () => {\n  const [reviews, setPeviews] = useState([]);\n  const [isReviewsLoading, setIsReviewsLoading] = useState(false);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getMoviesReviews(moviesId).then(setPeviews);\n    if (reviews.length > 0) {\n      setIsReviewsLoading(true);\n    }\n  }, [moviesId, reviews]);\n\n  return (\n    <div>\n      <ul>\n        {isReviewsLoading ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30f8890b4b18c3650777b7120811d941';\n\nexport const getTrandingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false `,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMoviesCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n"],"names":["useState","reviews","setPeviews","isReviewsLoading","setIsReviewsLoading","moviesId","useParams","useEffect","getMoviesReviews","then","length","map","review","author","content","id","axios","API_KEY","getTrandingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMoviesDetails","getMoviesCast","cast"],"sourceRoot":""}