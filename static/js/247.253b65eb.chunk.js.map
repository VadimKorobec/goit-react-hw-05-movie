{"version":3,"file":"static/js/247.253b65eb.chunk.js","mappings":"sMAkCA,UA5Ba,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SAOR,OALAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GAAUI,KAAKL,EAE9B,GAAE,CAACC,KAGF,0BAEE,wBACGF,EAAKO,KAAI,SAAAP,GAAI,OACZ,2BACE,gBAAKQ,IAAKC,EAAAA,EAAeT,EAAKU,aAAcC,IAAKX,EAAKY,QACtD,4BACE,uBAAIZ,EAAKa,iBACT,uCAAeb,EAAKc,kBAJfd,EAAKe,GADF,OAYrB,C,8LC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,gCAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAgB,mCAAG,WAAMZ,GAAN,uFACXC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,qBAA0C,CAC3DI,OAAQ,CACNC,QAASH,KAHiB,cACxBK,EADwB,yBAMvBA,EAAKC,MANkB,2CAAH,sDAShBlB,EAAa,mCAAG,WAAMU,GAAN,uFACRC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,4BAAiD,CAClEI,OAAQ,CACNC,QAASH,KAHc,cACrBK,EADqB,yBAMpBA,EAAKC,KAAKvB,MANU,2CAAH,sDASb4B,EAAgB,mCAAG,WAAMb,GAAN,uFACXC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,6BAAkD,CACnEI,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJoB,cACxBC,EADwB,yBAOvBA,EAAKC,KAAKC,SAPa,2CAAH,qD,sDC9CtB,IAAMf,EAAe,iC","sources":["components/Cast/Cast.jsx","services/apiService.jsx","services/constans.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constans';\n// import { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getMoviesCast(moviesId).then(setCast);\n    // setIsLoading(true);\n  }, [moviesId]);\n\n  return (\n    <div>\n      {/* {isLoading && <Loader />} */}\n      <ul>\n        {cast.map(cast => (\n          <li key={cast.id}>\n            <img src={BASE_IMG_URL + cast.profile_path} alt={cast.name} />\n            <div>\n              <p>{cast.original_name}</p>\n              <p>Character: {cast.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30f8890b4b18c3650777b7120811d941';\n\nexport const getTrandingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false `,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMoviesCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","cast","setCast","moviesId","useParams","useEffect","getMoviesCast","then","map","src","BASE_IMG_URL","profile_path","alt","name","original_name","character","id","axios","API_KEY","getTrandingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMoviesDetails","getMoviesReviews"],"sourceRoot":""}