{"version":3,"file":"static/js/736.13ac9b3a.chunk.js","mappings":"sQAEaA,EAAOC,EAAAA,EAAAA,GAAH,6GAKJC,EAAWD,EAAAA,EAAAA,GAAH,+HAORE,EAAMF,EAAAA,EAAAA,IAAH,4EAMHG,EAAcH,EAAAA,EAAAA,IAAH,iH,SCgBxB,EA7Ba,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GAAII,KAAKL,EACxB,GAAE,CAACC,KAGF,0BACE,SAACR,EAAD,UACGM,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAA9B,OACR,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IAAKH,EAAeI,EAAAA,EAAeJ,EAAeK,EAClDC,IAAKL,KAEP,UAACZ,EAAD,YACE,uBAAIY,KACJ,uCAAeC,UAPJH,EADP,OAejB,C,8LChCDQ,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAUjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,gCAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANkB,cACxBC,EADwB,yBAUvBA,EAAKC,KAAKC,SAVa,2CAAH,sDAahBG,EAAgB,mCAAG,WAAMzB,GAAN,uFACXc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,qBAA0C,CAC3DiB,OAAQ,CACNC,QAASH,KAHiB,cACxBK,EADwB,yBAMvBA,EAAKC,MANkB,2CAAH,sDAShBlB,EAAa,mCAAG,WAAMH,GAAN,uFACRc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,4BAAiD,CAClEiB,OAAQ,CACNC,QAASH,KAHc,cACrBK,EADqB,yBAMpBA,EAAKC,KAAKvB,MANU,2CAAH,sDASb4B,EAAgB,mCAAG,WAAM1B,GAAN,uFACXc,EAAAA,EAAAA,IAAA,gBAAmBd,EAAnB,6BAAkD,CACnEiB,OAAQ,CACNC,QAASH,KAHiB,cACxBK,EADwB,yBAMvBA,EAAKC,KAAKC,SANa,2CAAH,qD,sDC9CtB,IAAMX,EAAe,iC","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/apiService.jsx","services/constants.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px; ;\n`;\nexport const ListItem = styled.li`\n  display: block;\n  width: 200px;\n  margin: 5px;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\nexport const IMG = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from 'services/apiService';\nimport { BASE_IMG_URL } from 'services/constants';\nimport placeholder from '../../img/placeholder.webp';\nimport { IMG, List, ListItem, TextWrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getMoviesCast(id).then(setCast);\n  }, [id]);\n\n  return (\n    <div>\n      <List>\n        {cast.map(({ order, profile_path, name, character }) => (\n          <ListItem key={order}>\n            <IMG\n              src={profile_path ? BASE_IMG_URL + profile_path : placeholder}\n              alt={name}\n            />\n            <TextWrapper>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </TextWrapper>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30f8890b4b18c3650777b7120811d941';\n\nexport const getTrandingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const resp = await axios.get(\n    `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false `,\n    {\n      params: {\n        api_key: API_KEY,\n        page: 1,\n      },\n    }\n  );\n  return resp.data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const resp = await axios.get(`movie/${id}?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data;\n};\n\nexport const getMoviesCast = async id => {\n  const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const resp = await axios.get(`movie/${id}/reviews?&language=en-US `, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["List","styled","ListItem","IMG","TextWrapper","useState","cast","setCast","id","useParams","useEffect","getMoviesCast","then","map","order","profile_path","name","character","src","BASE_IMG_URL","placeholder","alt","axios","API_KEY","getTrandingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMoviesDetails","getMoviesReviews"],"sourceRoot":""}